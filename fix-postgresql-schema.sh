#!/bin/bash
echo 'üîß CORRECTION SCH√âMA POSTGRESQL - EMYNOPASS'
echo '============================================'
echo ''

# Arr√™ter les services
echo 'üõë Arr√™t des services...'
docker-compose down
echo ''

# D√©marrer PostgreSQL
echo 'üöÄ D√©marrage PostgreSQL...'
docker-compose up -d postgres
sleep 10
echo ''

# Corriger le sch√©ma de la table users
echo 'üìä Correction table users...'
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE users ADD COLUMN IF NOT EXISTS isDemo BOOLEAN DEFAULT false;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE users ADD COLUMN IF NOT EXISTS isTemporaryDemo BOOLEAN DEFAULT false;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE users ADD COLUMN IF NOT EXISTS demoExpiresAt TEXT;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE users ADD COLUMN IF NOT EXISTS createdAt TEXT DEFAULT CURRENT_TIMESTAMP;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE users ADD COLUMN IF NOT EXISTS updatedAt TEXT DEFAULT CURRENT_TIMESTAMP;"
echo '‚úÖ Table users corrig√©e'
echo ''

# Corriger le sch√©ma de la table files
echo 'üìä Correction table files...'
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE files ADD COLUMN IF NOT EXISTS isEncrypted BOOLEAN DEFAULT false;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE files ADD COLUMN IF NOT EXISTS uploadedAt TEXT DEFAULT CURRENT_TIMESTAMP;"
docker-compose exec postgres psql -U emynopass -d emynopass -c "ALTER TABLE files ADD COLUMN IF NOT EXISTS expiresAt TEXT;"
echo '‚úÖ Table files corrig√©e'
echo ''

# V√©rifier le sch√©ma
echo 'üìã V√©rification du sch√©ma...'
echo 'Table users:'
docker-compose exec postgres psql -U emynopass -d emynopass -c "\d users"
echo ''
echo 'Table files:'
docker-compose exec postgres psql -U emynopass -d emynopass -c "\d files"
echo ''

# Red√©marrer tous les services
echo 'üöÄ Red√©marrage des services...'
docker-compose up -d --build
echo ''

# Attendre le d√©marrage
echo '‚è≥ Attente du d√©marrage (60s)...'
sleep 60
echo ''

# V√©rifier le statut
echo 'üìä V√©rification du statut:'
docker-compose ps
echo ''

# Test de connectivit√©
echo 'üîó Test de connectivit√©:'
curl -f https://emynona.cloud/health || echo 'Health check √©chou√©'
echo ''

# Test d'authentification
echo 'üîê Test d'authentification:'
curl -X POST https://emynona.cloud/api/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"email":"polosko@emynopass.dev","password":"Emynopass2024!"}' || echo 'Auth test √©chou√©'
echo ''

echo 'üéâ CORRECTION SCH√âMA TERMIN√âE'
