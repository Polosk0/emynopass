# Dockerfile backend ultra-simplifi√©
FROM node:18-alpine AS builder

# Installer les d√©pendances syst√®me
RUN apk add --no-cache wget sqlite curl

# D√©finir le r√©pertoire de travail
WORKDIR /app

# Copier les fichiers
COPY backend/package*.json ./
RUN npm ci

COPY backend/ ./
RUN npm run build

# Cr√©er les dossiers avec permissions
RUN mkdir -p /app/data /app/uploads /app/logs
RUN chmod -R 777 /app/data /app/uploads /app/logs

# Cr√©er une base de donn√©es SQLite vide pour √©viter les erreurs
RUN touch /app/data/emynopass.db
RUN chmod 666 /app/data/emynopass.db

# S'assurer que le dossier data est accessible
RUN chown -R node:node /app/data

# V√©rifier que la compilation a r√©ussi
RUN ls -la /app/dist/
RUN test -f /app/dist/index.js || (echo "‚ùå Fichier dist/index.js manquant" && exit 1)

# Exposer le port
EXPOSE 3001

# Variables d'environnement
ENV NODE_ENV=production
ENV PORT=3001
ENV DATABASE_PATH=/app/data/emynopass.db

# Commande de d√©marrage avec gestion d'erreur et diagnostic
CMD ["sh", "-c", "echo 'üîß [DEBUG] D√©marrage du backend...' && echo 'üîß [DEBUG] V√©rification des fichiers...' && ls -la /app/dist/ && echo 'üîß [DEBUG] V√©rification des permissions...' && ls -la /app/data/ && echo 'üîß [DEBUG] Lancement du backend...' && node dist/index.js"]
