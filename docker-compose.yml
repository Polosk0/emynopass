version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: emynopass-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - emynopass-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: fileshare-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/fileshare.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emynopass-network
    profiles:
      - production

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: fileshare-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - emynopass-network
    profiles:
      - production

  nginx:
    image: nginx:alpine
    container_name: fileshare-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-frontend.conf:/etc/nginx/conf.d/default.conf
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - frontend
      - backend
    networks:
      - emynopass-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  emynopass-network:
    driver: bridge