version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: emynopass-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - emynopass-network

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: emynopass-backend
    restart: "no"  # Pas de red√©marrage automatique pour debug
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/emynopass.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-change-in-production}
      - PORT=3001
      - FRONTEND_URL=https://emynona.cloud
    ports:
      - "0.0.0.0:3001:3001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backend/data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emynopass-network
    command: ["node", "dist/index.js"]

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: emynopass-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=https://api.emynona.cloud
    ports:
      - "0.0.0.0:3000:3000"
    networks:
      - emynopass-network
    healthcheck:
      disable: true

  nginx:
    image: nginx:alpine
    container_name: emynopass-nginx
    restart: unless-stopped
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./uploads:/var/www/uploads:ro
      - ./docker/nginx-production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs:/var/log/nginx:rw
    depends_on:
      - frontend
      - backend
    networks:
      - emynopass-network

volumes:
  emynopass-data:
  emynopass-uploads:
  emynopass-logs:

networks:
  emynopass-network:
    driver: bridge
